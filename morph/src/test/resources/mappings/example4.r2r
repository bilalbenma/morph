@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix exa: <http://example.com/ns#> .
@prefix dept: <http://www.example.com/dept#> .
@prefix emp: <http://www.example.com/emp#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix : <http://es.upm.fi.dia.oeg/R2RMapping#> . 
:TriplesMap1
    a rr:TriplesMapClass;
    rr:SQLQuery """
       Select CONCAT('Department', deptno) AS "deptId", deptno , dname , loc
         from test.DEPT
       """;

    rr:subjectMap [ rr:column "deptId"; rr:termtype "BlankNode"; rr:class exa:dept; 
                    rr:graph exa:DeptGraph;
                    rr:inverseExpression "{deptno} = substr({deptId},length('Department')+1)"];

    rr:predicateObjectMap [ rr:predicateMap [ rr:predicate dept:deptno ]; 
      rr:objectMap    [ rr:column "deptno"; rr:datatype xsd:positiveInteger ] ];
      
    rr:predicateObjectMap [ rr:predicateMap [ rr:predicate dept:name ]; 
      rr:objectMap    [ rr:column "dname" ] ];

    rr:predicateObjectMap  [ rr:predicateMap [ rr:predicate dept:location ]; 
      rr:objectMap    [ rr:column "loc" ]];

    rr:predicateObjectMap     [ rr:predicateMap [ rr:predicate dept:COMPANY ]; 
      rr:objectMap    [ rr:object "EXAMPLE Corporation" ]]
.
:TriplesMap3
 a rr:TriplesMapClass;
    rr:SQLQuery """
      Select CONCAT('example.com/emp/', id) AS "empId"
           , CONCAT('example.com/emp/likes/', likeType) AS "empLikes"
           , likedObj
        from test.LIKES
      """;

    rr:subjectMap [ rr:column "empId"; rr:graph exa:LikesGraph ];

    rr:predicateObjectMap [ rr:predicateMap [ rr:column "empLikes" ];
      rr:objectMap    [ rr:column "likedObj" ] ]
 .
 :TriplesMap2
    a rr:TriplesMapClass;
    rr:SQLQuery """
       Select CONCAT('example.com/emp/', empno) AS "empURI"
            , empno
            , ename
            , CONCAT('example.com/emp/job/', job) AS "jobTypeURI"
            , job
            , deptno
            , CONCAT('example.com/emp/etype/', etype) AS "empTypeURI"
            , etype
            , CONCAT('example.com/graph/', job ,'/' , etype) AS "graphURI"
       from test.EMP
       """;

    rr:subjectMap [ rr:column "empURI";  rr:class exa:emp;  rr:graphColumn "graphURI" ];

    rr:predicateObjectMap [ rr:predicateMap [ rr:predicate emp:jobtype ]; 
                            rr:objectMap    [ rr:column "jobTypeURI" ]];

    rr:predicateObjectMap [ rr:predicateMap [ rr:predicate rdf:type ]; 
        					rr:objectMap    [ rr:column "jobTypeURI" ]];

    rr:predicateObjectMap     [ rr:predicateMap [ rr:predicate emp:emptype ]; 
      rr:objectMap    [ rr:column "empTypeURI" ]];

    rr:predicateObjectMap     [ rr:predicateMap [rr:predicate rdf:type ]; 
      rr:objectMap    [ rr:column "empTypeURI" ]];

    rr:predicateObjectMap [ rr:predicateMap [ rr:predicate emp:empno ]; 
      rr:objectMap    [ rr:column "empno" ]];

    rr:predicateObjectMap [ rr:predicateMap [ rr:predicate emp:name ]; 
     rr:objectMap    [ rr:column "ename" ]; 
      rr:graph emp:empNameGraph];

    rr:predicateObjectMap  [ rr:predicateMap [ rr:predicate emp:job ]; 
     rr:objectMap    [ rr:column "job" ]];

    rr:predicateObjectMap    [ rr:predicateMap [ rr:predicate emp:deptNum ]; 
      rr:objectMap    [ rr:column "deptno" ]];

    rr:predicateObjectMap [  rr:predicateMap [ rr:predicate emp:etype ]; 
      rr:objectMap    [ rr:column "etype" ]];

    rr:refPredicateObjectMap [  rr:refPredicateMap [ rr:predicate emp:c_ref_deptno ];
      rr:refObjectMap    [ rr:parentTriplesMap <#TriplesMap1>; rr:joinCondition "child.{deptno} = parent.{deptno}" ]]
      .

